package UserInterfaces;

import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import Classes.Produto;
import DAO.ProdutoDAO;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

public final class ListProdutos extends javax.swing.JFrame {

    private CadastroProdutos cadastroFrame;

    public ListProdutos() {
        //initComponents();
        // montarETornarTabelaConfigurada(tblClientes);

    }

    public ListProdutos(CadastroProdutos cadastroFrame) {  //PASSANDO O CADASTRO CLIENTE DIRETAMENTE PARA LISTCLIENTES 
        //Agora, ListClientes tem acesso direto ao objeto correto de CadastroCliente e pode preencher os campos corretamente
        initComponents();
        montarETornarTabelaConfigurada(tblProdutos);
        this.cadastroFrame = cadastroFrame;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlPesquisar = new javax.swing.JPanel();
        txtPesquisarProduto = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblProdutos = new javax.swing.JTable();
        btnSelecionar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Produtos");

        pnlPesquisar.setBorder(javax.swing.BorderFactory.createTitledBorder("Pesquisar produto por descrição"));

        txtPesquisarProduto.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtPesquisarProduto.setToolTipText("Digite nome do produto para pesquisar");
        txtPesquisarProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarProdutoKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout pnlPesquisarLayout = new javax.swing.GroupLayout(pnlPesquisar);
        pnlPesquisar.setLayout(pnlPesquisarLayout);
        pnlPesquisarLayout.setHorizontalGroup(
            pnlPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPesquisarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtPesquisarProduto, javax.swing.GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlPesquisarLayout.setVerticalGroup(
            pnlPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPesquisarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtPesquisarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblProdutos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblProdutos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(tblProdutos);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnSelecionar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSelecionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Check 16px.png"))); // NOI18N
        btnSelecionar.setText("Selecionar");
        btnSelecionar.setToolTipText("Adicionar item ");
        btnSelecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Cancelar 16px.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setToolTipText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(btnSelecionar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSelecionar)
                    .addComponent(btnCancelar))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    private void btnSelecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarActionPerformed

        selecionarRegistro();

    }//GEN-LAST:event_btnSelecionarActionPerformed

    private void txtPesquisarProdutoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarProdutoKeyReleased

        String busca = txtPesquisarProduto.getText().trim(); //Elimina espaços em branco da caixa de texto

        if (busca.isEmpty()) {
            montarETornarTabelaConfigurada(tblProdutos);
        } else {
            pesquisarTabelaNome(busca);
        }


    }//GEN-LAST:event_txtPesquisarProdutoKeyReleased

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed

        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListProdutos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnSelecionar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel pnlPesquisar;
    private javax.swing.JTable tblProdutos;
    private javax.swing.JTextField txtPesquisarProduto;
    // End of variables declaration//GEN-END:variables

    public void montarETornarTabelaConfigurada(JTable tabelaProtudo) {
        String[] colunas = {"ID", "Descrição", "Saldo", "Preço Venda"};

        DefaultTableModel modelo = new DefaultTableModel(colunas, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Impede edição de todas as células
            }
        };

        tblProdutos.addMouseListener(new java.awt.event.MouseAdapter() {  //metodo para selecionar do duplo clique
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                if (evt.getClickCount() == 2 && tblProdutos.getSelectedRow() != -1) {
                    selecionarRegistro();
                }
            }
        });

        List<Produto> lista = ProdutoDAO.listar();

        for (Produto p : lista) {
            String[] linha = {
                Integer.toString(p.getId()),
                p.getDescricao(),
                Integer.toString(p.getSaldo()),
                Double.toString(p.getPrecoVenda()),};
            modelo.addRow(linha);
        }

        tabelaProtudo.setModel(modelo);

        // Configura a largura das colunas
        tabelaProtudo.getColumnModel().getColumn(0).setPreferredWidth(50);  // ID
        tabelaProtudo.getColumnModel().getColumn(1).setPreferredWidth(200); // Nome
        tabelaProtudo.getColumnModel().getColumn(2).setPreferredWidth(100); // SALDO
        tabelaProtudo.getColumnModel().getColumn(3).setPreferredWidth(100); // PREÇO VENDA

        // Alinhar o cabeçalho à esquerda
        JTableHeader header = tabelaProtudo.getTableHeader();
        DefaultTableCellRenderer renderer = (DefaultTableCellRenderer) header.getDefaultRenderer();
        renderer.setHorizontalAlignment(SwingConstants.LEFT);

    }

    public void pesquisarTabelaNome(String nome) {

        String[] colunas = {"ID", "Descrição", "Saldo", "Preço Venda"};

        DefaultTableModel modelo = new DefaultTableModel(colunas, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Impede edição de todas as células
            }
        };

        List<Produto> lista = ProdutoDAO.listar();

        // Filtra os clientes cujo nome contém o texto buscado (ignorando maiúsculas/minúsculas)
        for (Produto p : lista) {
            if (p.getDescricao().toLowerCase().contains(nome.toLowerCase())) {
                String[] linha = {
                    Integer.toString(p.getId()),
                    p.getDescricao(),
                    Integer.toString(p.getSaldo()),
                    Double.toString(p.getPrecoVenda()),};
                modelo.addRow(linha);
            }
        }

        tblProdutos.setModel(modelo);

        // Configura a largura das colunas
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(50);  // ID
        tblProdutos.getColumnModel().getColumn(1).setPreferredWidth(200); // DESCRIÇÃO
        tblProdutos.getColumnModel().getColumn(2).setPreferredWidth(100); // SALDO
        tblProdutos.getColumnModel().getColumn(3).setPreferredWidth(100); // PREÇO VENDA

        // Alinhar o cabeçalho à esquerda
        JTableHeader header = tblProdutos.getTableHeader();
        DefaultTableCellRenderer renderer = (DefaultTableCellRenderer) header.getDefaultRenderer();
        renderer.setHorizontalAlignment(SwingConstants.LEFT);
    }

    private void selecionarRegistro() {

        List<Produto> listaProdutos = ProdutoDAO.listar(); //carrega a lista completa de clientes
        int linhaSelecionada = tblProdutos.getSelectedRow(); //pega a linha selecionada da tabela

        if (linhaSelecionada >= 0) {
            // Corrigido: converte corretamente o valor da tabela para inteiro
            String idStr = tblProdutos.getValueAt(linhaSelecionada, 0).toString();
            int idSelecionado = Integer.parseInt(idStr);

            // Procurando o cliente na lista completa com o ID selecionado
            Produto produtoSelecionado = null;
            for (Produto produto : listaProdutos) {
                if (produto.getId() == idSelecionado) {
                    produtoSelecionado = produto;
                    break;
                }
            }

            // Se o cliente foi encontrado
            if (produtoSelecionado != null) {
                // Preenche os campos no CadastroClienteFram              
                cadastroFrame.preencherCampos(produtoSelecionado);  // usamos o atributo passado
                dispose(); // Fecha o JDialog de seleção
            } else {
                JOptionPane.showMessageDialog(this, "Cliente não encontrado.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um cliente na tabela.");
        }
    }

}
